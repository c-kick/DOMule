import{hnlLogger}from"./hnl.logger.mjs";export const NAME="cssRenderer";export function renderCSS(element,recursive=true,cssName){if(!element)throw new Error("No element specified.");if(element.tagName==="TD");let matches=[];for(const sheet of document.styleSheets){if(cssName&&sheet.title!==cssName)continue;const rules=sheet.rules||sheet.cssRules;for(const rule of rules)try{if(element.matches(rule.selectorText))matches.push(rule)}catch(e){hnlLogger.error(NAME,e)}}const srcRules=document.createElement(element.tagName).style;
srcRules.cssText=element.style.cssText;matches.forEach(rule=>{for(let prop of rule.style){if(prop==="pointer-events"||prop==="cursor")continue;let val=srcRules.getPropertyValue(prop)||rule.style.getPropertyValue(prop);let priority=rule.style.getPropertyPriority(prop);element.style.setProperty(prop,val,priority)}});if(recursive){let d=element.children.length;while(d--)renderCSS(element.children[d],recursive,cssName)}}export function init(elements){hnlLogger.info(NAME,`Parsing ${elements.length} elements...`);
elements.forEach(element=>{renderCSS(element,true,element.dataset.cssName?element.dataset.cssName:"")});hnlLogger.info(NAME,`Done.`)};
