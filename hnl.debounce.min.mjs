const _defaults={threshold:100,execStart:false,execWhile:false,execDone:true};export function debounceThis(callback,opts){let options={timer:0,whileTimer:0,busy:false,..._defaults,...opts};return function(...args){clearTimeout(options.timer);if(!options.busy&&options.execStart){callback.apply(this,args);options.busy=true}if(options.execWhile&&!options.whileTimer)options.whileTimer=setTimeout(()=>{callback.apply(this,args);options.whileTimer=false},options.threshold);options.timer=setTimeout(()=>{options.busy=
false;if(options.execDone)callback.apply(this,args);clearInterval(options.whileTimer)},options.threshold)}};
