import{hnlLogger}from"./hnl.logger";const NAME="bmiCalculator";export function calculateBMI(data,change){let dataIn={length:data["length"]?parseFloat(data["length"]):0,weight:data["weight"]?parseFloat(data["weight"]):0,bmi:data["bmi"]?parseFloat(data["bmi"]):0,change:change};if((dataIn.length!==null||dataIn.weight!==null)&&dataIn.bmi!==null&&change){const dataOut={...dataIn};if(dataIn.length>0&&change==="bmi")dataOut.weight=dataIn.bmi*Math.pow(dataIn.length/100,2);else if(dataIn.weight>0&&change===
"bmi")dataOut.length=Math.sqrt(dataIn.weight/dataIn.bmi)*100;dataOut.bmi=dataOut.weight&&dataOut.length?dataOut.weight/Math.pow(dataOut.length/100,2):0;return dataOut}else{hnlLogger.warn(NAME,"Warning: not enough data for calculation:");hnlLogger.warn(NAME,data);return dataIn}}export function weightForLength(bmiCutoffs,length,weight){const [lowerBound,higherBound]=bmiCutoffs.map(bmi=>bmi*(length/100)**2);const difference=Math.max(lowerBound-weight,weight-higherBound);return{low:lowerBound,high:higherBound,
diff:difference}};
