import{domScanner}from"./hnl.domscanner.mjs";import{isVisible,objForEach}from"./hnl.helpers.mjs";import{hnlLogger}from"./hnl.logger.mjs";import eventHandler from"./hnl.eventhandler.mjs";const NAME="dynImports";const deferredModules={};function rewritePath(uri){return uri.replace("./","./../")+(typeof SITE_NONCE!=="undefined"?"?"+SITE_NONCE:"")}function loadModule(key,elements,isLazy=false){hnlLogger.info(NAME,`Importing ${key}...`);import(rewritePath(key)).then(module=>{})}export function dynImports(callback){domScanner("requires",
function(modules,deferredModules,totals){let c=totals;objForEach(modules,function(key,elements,index){hnlLogger.info(NAME,"Importing "+key+"...");import(rewritePath(key)).then(function(module){hnlLogger.info(NAME,key+" Imported.");if(typeof module.init==="function")try{hnlLogger.info(NAME,key+" has init, calling...");module.init.call(module,elements)}catch(err){hnlLogger.error(NAME,err)}c--}).catch(function(error){hnlLogger.error(NAME,error)}).finally(function(e){if(!c){hnlLogger.info(NAME,"All dynamic imports finished loading.");
if(typeof callback==="function")callback.call(this,e)}})});objForEach(deferredModules,function(key,elements,index){function watchModules(){elements.forEach(function(element){isVisible(element,function(){if(deferredModules[key]){hnlLogger.info(NAME,"Element (at least one of those requiring) is visible, loading lazy module and clearing watcher.");import(rewritePath(key)).then(function(module){hnlLogger.info(NAME,key+" Imported (lazy).");if(typeof module.init==="function")try{hnlLogger.info(NAME,key+
" has init, calling...");module.init.call(module,elements)}catch(err){hnlLogger.error(NAME,err)}delete deferredModules[key]}).catch(function(error){hnlLogger.error(NAME,error)})}eventHandler.removeListener("docShift",watchModules)})})}eventHandler.addListener("docShift",watchModules)})})};
