import{hnlLogger}from"./hnl.logger.mjs";export const NAME="urlTools";export function changeUrlVar(keyValuePairs,navigate=true){if("URLSearchParams"in window){const searchParams=new URLSearchParams(window.location.search);for(const keyValuePair in keyValuePairs){const key=keyValuePair;const value=keyValuePairs[keyValuePair];const setValue=value===undefined?"true":typeof value==="boolean"&&!value?"false":value;if((value===undefined||value===null)&&searchParams.has(key))searchParams.delete(key);else if(value!==
undefined&&value!==null)searchParams.set(key,setValue)}if(navigate)window.location.search=searchParams.toString();else window.history.replaceState(window.history.state,"",window.location.pathname+"?"+searchParams.toString())}else hnlLogger.warn(NAME,"Window has no search param support.")}export function readUrlVar(key,fallback=null){if("URLSearchParams"in window){const searchParams=new URLSearchParams(window.location.search);return searchParams.get(key)||fallback}else{hnlLogger.warn(NAME,"Window has no search param support.");
return fallback}}export function init(elements){elements.forEach(element=>{element.changeUrlVar=changeUrlVar;element.readUrlVar=readUrlVar})};
